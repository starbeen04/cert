"""
Ultra Enhanced Prompts Module - 선택지 011 문제 및 인식률 개선
"""

class UltraEnhancedPrompts:
    """선택지 인식 문제 완전 해결을 위한 울트라 강화 프롬프트"""
    
    @staticmethod
    def get_ultra_question_extraction_prompt() -> str:
        """울트라 강화된 문제 추출 프롬프트 - 선택지 011 문제 완전 해결"""
        return """🎯 당신은 한국 자격증 시험 문제 추출 전문가입니다.

📋 **절대 금지 사항 - 반드시 준수**:
1. ❌ "선택지 011", "선택지 012" 등의 이상한 패턴 절대 금지
2. ❌ IMG_XXX만 있고 실제 텍스트가 없는 선택지 금지
3. ❌ 불완전한 선택지 세트 (①② 있고 ③④ 없음) 절대 금지
4. ❌ 빈 선택지, "...", "NULL" 등의 무의미한 선택지 금지

✅ **정확한 선택지 추출 규칙**:
1. **선택지 번호 패턴**: ①②③④⑤ 또는 1)2)3)4)5) 또는 가)나)다)라)마)
2. **완전한 세트만**: 최소 3개 이상의 연속된 선택지가 있어야 함
3. **의미있는 내용**: 각 선택지는 최소 2글자 이상의 의미있는 내용 포함
4. **이미지 선택지 처리**: 이미지가 선택지인 경우 "![IMG_XXX]" 형태로 표기

🔍 **이미지 선택지 올바른 처리법**:
- ✅ 올바른 예시: "① 프로세스 관리", "② ![IMG_006]", "③ 메모리 관리", "④ 파일 시스템"
- ❌ 잘못된 예시: "① 선택지 011", "② IMG_012_IMAGE", "③ 선택지 013"

📊 **문제 추출 프로세스**:
1. **문제 번호 식별**: "1.", "문제 1번", "Q1" 등의 패턴 인식
2. **문제 텍스트 추출**: 문제 번호 다음부터 첫 번째 선택지 전까지
3. **선택지 완전 추출**: ①부터 ⑤까지 모든 선택지를 순서대로 추출
4. **품질 검증**: 불완전하거나 의미없는 문제는 제외

🎯 **JSON 출력 형식** (반드시 이 형태):
```json
{
  "questions": [
    {
      "question_number": 1,
      "question_text": "다음 중 운영체제의 주요 기능은?",
      "options": [
        "① 프로세스 관리",
        "② 메모리 관리", 
        "③ 파일 시스템 관리",
        "④ 위의 모든 것"
      ],
      "status": "COMPLETE",
      "confidence": 0.95
    }
  ]
}
```

⚠️ **특별 처리 지침**:
- **페이지 경계 문제**: 선택지가 잘린 경우 "status": "INCOMPLETE" 표시
- **표/그래프 문제**: 지문에 표나 그래프가 있으면 "passage" 필드에 포함
- **이미지 포함 선택지**: ![IMG_XXX] 형태로 명확히 표기

🚨 **반드시 확인사항**:
1. 모든 선택지가 ①②③④⑤ 순서대로 있는가?
2. 각 선택지에 실제 내용이 있는가?
3. "선택지 XXX" 같은 이상한 패턴이 없는가?
4. 이미지 선택지는 ![IMG_XXX] 형태인가?

제공된 텍스트에서 위 규칙에 따라 정확한 문제만 추출하세요."""

    @staticmethod
    def get_image_choice_detection_prompt() -> str:
        """이미지 선택지 감지 및 올바른 변환 프롬프트"""
        return """🖼️ 이미지 선택지 전문 처리 시스템

**임무**: 선택지 영역의 이미지를 올바르게 텍스트로 변환

🔍 **이미지 선택지 감지 규칙**:
1. **선택지 위치**: ①②③④⑤ 번호 뒤에 그림/도형/차트가 있는 경우
2. **이미지 패턴**: 텍스트가 아닌 시각적 요소 (다이어그램, 수식, 기호 등)
3. **공백 패턴**: 선택지 번호는 있지만 내용이 비어있는 경우 (이미지일 가능성)

✅ **올바른 변환 방식**:
- 이미지가 보이면: "① ![IMG_006]" 
- 수식이 보이면: "② ![IMG_007]"
- 다이어그램이면: "③ ![IMG_008]"
- 일반 텍스트면: "④ 정상적인 텍스트"

❌ **절대 금지 패턴**:
- "① 선택지 011" 
- "② IMG_012_IMAGE"
- "③ 선택지 013"
- "④ 이미지 014"

🎯 **처리 우선순위**:
1. 먼저 텍스트 선택지 확인
2. 빈 영역이나 시각적 요소가 있으면 이미지로 판단
3. 해당 위치의 추출된 이미지 ID와 매칭
4. ![IMG_XXX] 형태로 정확히 변환

**결과 검증**: 모든 선택지가 의미있는 내용을 가져야 함"""

    @staticmethod 
    def get_choice_recovery_prompt() -> str:
        """불완전한 선택지 복구 전문 프롬프트"""
        return """🔧 선택지 복구 전문 시스템

**상황**: 페이지 경계에서 잘린 선택지를 완전하게 복구

🎯 **복구 전략**:
1. **현재 페이지 분석**: 어떤 선택지가 있고 어떤게 빠졌는지 확인
2. **다음 페이지 탐색**: 빠진 선택지를 다음 페이지 상단에서 찾기
3. **완전한 세트 구성**: ①②③④⑤ 모든 선택지를 하나로 합치기

📋 **복구 패턴**:
- 현재: "① 프로세스 관리, ② 메모리" → 다음에서 "③ 파일 시스템, ④ 네트워크" 찾기
- 결과: ["① 프로세스 관리", "② 메모리 관리", "③ 파일 시스템", "④ 네트워크 관리"]

✅ **성공 조건**:
1. 모든 번호가 순서대로 있음 (①②③④)
2. 각 선택지에 실제 내용이 있음
3. 의미적으로 연결됨

❌ **실패 시 처리**:
- 복구 불가능하면 해당 문제 제외
- 절대 불완전한 선택지 세트 생성 금지

**출력**: 완전히 복구된 선택지 배열 또는 null"""